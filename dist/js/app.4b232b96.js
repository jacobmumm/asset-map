(function(t){function e(e){for(var n,s,r=e[0],i=e[1],c=e[2],d=0,u=[];d<r.length;d++)s=r[d],a[s]&&u.push(a[s][0]),a[s]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n]);h&&h(e);while(u.length)u.shift()();return l.push.apply(l,c||[]),o()}function o(){for(var t,e=0;e<l.length;e++){for(var o=l[e],n=!0,s=1;s<o.length;s++){var i=o[s];0!==a[i]&&(n=!1)}n&&(l.splice(e--,1),t=r(r.s=o[0]))}return t}var n={},a={app:0},l=[];function s(t){return r.p+"js/"+({about:"about"}[t]||t)+"."+{about:"64d347f8"}[t]+".js"}function r(e){if(n[e])return n[e].exports;var o=n[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.e=function(t){var e=[],o=a[t];if(0!==o)if(o)e.push(o[2]);else{var n=new Promise(function(e,n){o=a[t]=[e,n]});e.push(o[2]=n);var l,i=document.createElement("script");i.charset="utf-8",i.timeout=120,r.nc&&i.setAttribute("nonce",r.nc),i.src=s(t),l=function(e){i.onerror=i.onload=null,clearTimeout(c);var o=a[t];if(0!==o){if(o){var n=e&&("load"===e.type?"missing":e.type),l=e&&e.target&&e.target.src,s=new Error("Loading chunk "+t+" failed.\n("+n+": "+l+")");s.type=n,s.request=l,o[1](s)}a[t]=void 0}};var c=setTimeout(function(){l({type:"timeout",target:i})},12e4);i.onerror=i.onload=l,document.head.appendChild(i)}return Promise.all(e)},r.m=t,r.c=n,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/",r.oe=function(t){throw console.error(t),t};var i=window["webpackJsonp"]=window["webpackJsonp"]||[],c=i.push.bind(i);i.push=e,i=i.slice();for(var d=0;d<i.length;d++)e(i[d]);var h=c;l.push([0,"chunk-vendors"]),o()})({0:function(t,e,o){t.exports=o("56d7")},"56d7":function(t,e,o){"use strict";o.r(e);o("cadf"),o("551c"),o("f751"),o("097d");var n=o("2b0e"),a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{attrs:{id:"app"}},[o("div",{attrs:{id:"nav"}}),o("router-view")],1)},l=[],s=(o("5c0b"),o("2877")),r={},i=Object(s["a"])(r,a,l,!1,null,null,null),c=i.exports,d=o("8c4f"),h=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"home"},[o("b-row",[o("b-col",[o("div",{staticClass:"px-4"},[o("GmapMap",{staticStyle:{width:"100%",height:"500px"},attrs:{options:{zoomControl:!0,mapTypeControl:!1,scaleControl:!1,streetViewControl:!1,rotateControl:!1,fullscreenControl:!1,disableDefaultUi:!1},center:t.location,zoom:t.zoom},on:{click:t.mapClick}},[t._l(t.watersheds,function(t,e){return o("gmap-polygon",{key:e,attrs:{paths:[t.points],options:{fillColor:t.fillColor}}})}),t.polygon?o("gmap-polygon",{attrs:{paths:[t.polygon],options:{fillColor:t.fillColor},editable:!0},on:{paths_changed:function(e){return t.updateEdited(e)}}}):t._e(),t.place?o("GmapMarker",{attrs:{position:t.place.geometry.location,clickable:!1,draggable:!1},on:{click:function(e){t.center=t.m.position}}}):t._e()],2)],1)]),o("b-col",{staticClass:"mr-3"},[o("h3",[t._v("Watersheds:")]),o("table",{staticClass:"table"},[o("tbody",t._l(t.watersheds,function(e,n){return o("tr",{key:n},[o("td",{style:"background-color: "+e.fillColor},[t._v(t._s(e.name))]),o("td",[o("b-button",{attrs:{variant:"danger"},on:{click:function(e){return t.watersheds.splice(n,1)}}},[o("fa-icon",{attrs:{icon:"trash"}})],1)],1)])}),0),o("tfoot",[o("tr",[o("td",[o("b-form-input",{attrs:{placeholder:"Add a watershed"},model:{value:t.watershed_name,callback:function(e){t.watershed_name=e},expression:"watershed_name"}})],1),o("td",[t.watershed_name?o("verte",{attrs:{picker:"square",model:"rgb"},model:{value:t.fillColor,callback:function(e){t.fillColor=e},expression:"fillColor"}}):t._e()],1),o("td",{attrs:{width:"25%"}},[t.creating_watershed?o("div",[o("b-button",{attrs:{variant:"outline-info"},on:{click:t.cancelWatershed}},[t._v("Cancel")]),t.polygon?o("b-button",{staticClass:"mx-2",attrs:{variant:"info",disabled:!t.polygon},on:{click:t.saveWatershed}},[t._v("Save")]):t._e()],1):t._e(),!t.creating_watershed&&t.watershed_name?o("div",[o("b-button",{attrs:{variant:t.watershed_name?"info":null,disabled:!t.watershed_name},on:{click:function(e){t.creating_watershed=!0,t.polygon=null}}},[t._v("Create")])],1):t._e()])]),t.creating_watershed?o("tr",[o("td",{attrs:{colspan:"3"}},[t.polygon?o("p",[t._v("Drag the points around to define the watershed")]):o("p",[t._v("Click on the map to start drawing boundaries")])])]):t._e()])]),t.watersheds.length>0?o("div",[o("h3",[t._v("Locate Asset:")]),o("gmap-autocomplete",{staticClass:"form-control",attrs:{placeholder:"What's the address?",value:t.address},on:{place_changed:t.setPlace}}),t.locating?o("div",{staticClass:"text-center pt-3"},[o("fa-icon",{attrs:{icon:"spinner",size:"3x",spin:""}})],1):t._e(),t.located?o("div",[t._v("\n          Your watershed is: "+t._s(t.locatedWatershed?t.locatedWatershed.name:"Unknown")+" \n        ")]):t._e()],1):t._e()])],1)],1)},u=[],p=(o("ac6a"),o("7f7f"),o("28a5"),"#CCCCCC"),g={name:"home",components:{},mounted:function(){var t=this;fetch("/api/watersheds").then(function(t){return t.json()}).then(function(e){t.watersheds=e.map(function(t){var e=t.bounds.split(":").map(function(t){var e=t.split(",");return console.log(t,e),{lat:parseFloat(e[0]),lng:parseFloat(e[1])}});return{name:t.title,fillColor:t.color,points:e}}),console.log(t.watersheds)}),console.log("WS=",this.watersheds)},data:function(){return{location:{lat:35.5951,lng:-82.5515},zoom:9,markers:[],watersheds:[],watershed_name:"",creating_watershed:!1,polygon:null,fillColor:p,address:"",place:null,locating:!1,located:!1,locatedWatershed:null}},computed:{watershedPaths:function(){return this.watersheds.map(function(t){return t.points})}},watch:{},methods:{mapClick:function(t){if(this.creating_watershed&&!this.polygon){var e={lat:t.latLng.lat(),lng:t.latLng.lng()};console.log("CLICK MAP=",e);var o=.1;this.polygon=[{lat:e.lat+o,lng:e.lng+o},{lat:e.lat+o,lng:e.lng-o},{lat:e.lat-o,lng:e.lng-o},{lat:e.lat-o,lng:e.lng+o}],console.log(this.polygon)}},saveWatershed:function(){var t=this,e={name:this.watershed_name,points:this.polygon,fillColor:this.fillColor},o=!0,n=this.polygon.reduce(function(t,e){return o?o=!1:t+=":",t+=e.lat+","+e.lng,t},"");fetch("/api/watersheds",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:e.name,bounds:n,color:e.fillColor})}).then(function(t){return t.json()}).then(function(o){o.id&&(e.id=o.id,t.watersheds.push(e)),console.log(this.watersheds)}),this.cancelWatershed()},cancelWatershed:function(){this.polygon=null,this.creating_watershed=!1,this.watershed_name="",this.fillColor=p},updateEdited:function(t){console.log("MVC=",t);for(var e=[],o=0;o<t.getLength();o++){for(var n=[],a=0;a<t.getAt(o).getLength();a++){var l=t.getAt(o).getAt(a);n.push({lat:l.lat(),lng:l.lng()})}e.push(n)}console.log("paths=",e[0]),this.polygon=e[0]},setPlace:function(t){t&&(console.log(t),this.locateWatershed(t))},locateWatershed:function(t){this.place=t,this.address=t.formatted_address;var e=this.place.geometry.location.lat(),o=this.place.geometry.location.lng(),n=new google.maps.LatLng(e,o);console.log("LL=",n),this.located=!1,this.locating=!0,this.locatedWatershed=null;var a=this;this.watersheds.forEach(function(t){var e=new google.maps.Polygon({paths:t.points});console.log("CHECKING",e),google.maps.geometry.poly.containsLocation(n,e)&&(a.locatedWatershed=t)}),this.locating=!1,this.located=!0}}},f=g,m=Object(s["a"])(f,h,u,!1,null,null,null),v=(m.exports,function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"home"},[o("b-row",[o("b-col",[o("div",{staticClass:"px-4"},[o("select",{directives:[{name:"model",rawName:"v-model",value:t.selectedMapId,expression:"selectedMapId"}],staticClass:"form-control",on:{change:[function(e){var o=Array.prototype.filter.call(e.target.options,function(t){return t.selected}).map(function(t){var e="_value"in t?t._value:t.value;return e});t.selectedMapId=e.target.multiple?o:o[0]},t.handleChange]}},[o("option",[t._v("Select a map")]),t._l(t.maps,function(e){return o("option",{key:e.id,domProps:{value:e.id}},[t._v("\n            "+t._s(e.title)+"\n          ")])})],2)])]),o("b-col",{staticClass:"ml-2"},[o("input",{attrs:{id:"newMapTitle"},domProps:{value:t.newMapTitle}})])],1),t.selectedMapId?o("b-row",{staticClass:"mt-2"},[o("map",{attrs:{id:t.selectedMapId}})]):t._e()],1)}),w=[],C=(o("7514"),function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"map"},[o("b-row",[o("b-col",[o("div",{staticClass:"px-4"},[o("GmapMap",{staticStyle:{width:"100%",height:"500px"},attrs:{options:{zoomControl:!0,mapTypeControl:!1,scaleControl:!1,streetViewControl:!1,rotateControl:!1,fullscreenControl:!1,disableDefaultUi:!1},center:t.location,zoom:t.zoom},on:{click:t.mapClick}},[t._l(t.watersheds,function(t,e){return o("gmap-polygon",{key:e,attrs:{paths:[t.points],options:{fillColor:t.fillColor}}})}),t.polygon?o("gmap-polygon",{attrs:{paths:[t.polygon],options:{fillColor:t.fillColor},editable:!0},on:{paths_changed:function(e){return t.updateEdited(e)}}}):t._e(),t.place?o("GmapMarker",{attrs:{position:t.place.geometry.location,clickable:!1,draggable:!1},on:{click:function(e){t.center=t.m.position}}}):t._e()],2)],1)]),o("b-col",{staticClass:"mr-3"},[o("h3",[t._v("Watersheds:")]),o("table",{staticClass:"table"},[o("tbody",t._l(t.watersheds,function(e,n){return o("tr",{key:n},[o("td",{style:"background-color: "+e.fillColor},[t._v(t._s(e.name))]),o("td",[o("b-button",{attrs:{variant:"danger"},on:{click:function(e){return t.watersheds.splice(n,1)}}},[o("fa-icon",{attrs:{icon:"trash"}})],1)],1)])}),0),o("tfoot",[o("tr",[o("td",[o("b-form-input",{attrs:{placeholder:"Add a watershed"},model:{value:t.watershed_name,callback:function(e){t.watershed_name=e},expression:"watershed_name"}})],1),o("td",[t.watershed_name?o("verte",{attrs:{picker:"square",model:"rgb"},model:{value:t.fillColor,callback:function(e){t.fillColor=e},expression:"fillColor"}}):t._e()],1),o("td",{attrs:{width:"25%"}},[t.creating_watershed?o("div",[o("b-button",{attrs:{variant:"outline-info"},on:{click:t.cancelWatershed}},[t._v("Cancel")]),t.polygon?o("b-button",{staticClass:"mx-2",attrs:{variant:"info",disabled:!t.polygon},on:{click:t.saveWatershed}},[t._v("Save")]):t._e()],1):t._e(),!t.creating_watershed&&t.watershed_name?o("div",[o("b-button",{attrs:{variant:t.watershed_name?"info":null,disabled:!t.watershed_name},on:{click:function(e){t.creating_watershed=!0,t.polygon=null}}},[t._v("Create")])],1):t._e()])]),t.creating_watershed?o("tr",[o("td",{attrs:{colspan:"3"}},[t.polygon?o("p",[t._v("Drag the points around to define the watershed")]):o("p",[t._v("Click on the map to start drawing boundaries")])])]):t._e()])]),t.watersheds.length>0?o("div",[o("h3",[t._v("Locate Asset:")]),o("gmap-autocomplete",{staticClass:"form-control",attrs:{placeholder:"What's the address?",value:t.address},on:{place_changed:t.setPlace}}),t.locating?o("div",{staticClass:"text-center pt-3"},[o("fa-icon",{attrs:{icon:"spinner",size:"3x",spin:""}})],1):t._e(),t.located?o("div",[t._v("\n          Your watershed is: "+t._s(t.locatedWatershed?t.locatedWatershed.name:"Unknown")+" \n        ")]):t._e()],1):t._e()])],1)],1)}),_=[],b="#CCCCCC",y={name:"map",props:["id"],components:{},created:function(){console.log("map created")},updated:function(){console.log("map updated")},mounted:function(){console.log("map mounted");var t=this;console.log("mounted map component for prop",this.id),fetch("/api/"+this.id+"/watersheds").then(function(t){return t.json()}).then(function(e){t.watersheds=e.map(function(t){var e=t.bounds.split(":").map(function(t){var e=t.split(",");return{lat:parseFloat(e[0]),lng:parseFloat(e[1])}});return{name:t.title,fillColor:t.color,points:e}})})},data:function(){return{location:{lat:35.5951,lng:-82.5515},zoom:9,markers:[],watersheds:[],watershed_name:"",creating_watershed:!1,polygon:null,fillColor:b,address:"",place:null,locating:!1,located:!1,locatedWatershed:null,id:null}},computed:{watershedPaths:function(){return this.watersheds.map(function(t){return t.points})}},watch:{},methods:{mapClick:function(t){if(this.creating_watershed&&!this.polygon){var e={lat:t.latLng.lat(),lng:t.latLng.lng()};console.log("CLICK MAP=",e);var o=.1;this.polygon=[{lat:e.lat+o,lng:e.lng+o},{lat:e.lat+o,lng:e.lng-o},{lat:e.lat-o,lng:e.lng-o},{lat:e.lat-o,lng:e.lng+o}],console.log(this.polygon)}},saveWatershed:function(){var t=this,e={name:this.watershed_name,points:this.polygon,fillColor:this.fillColor},o=!0,n=this.polygon.reduce(function(t,e){return o?o=!1:t+=":",t+=e.lat+","+e.lng,t},"");fetch("/api/"+this.id+"/watersheds",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:e.name,bounds:n,color:e.fillColor})}).then(function(t){return t.json()}).then(function(o){o.id&&(e.id=o.id,t.watersheds.push(e)),console.log(this.watersheds)}),this.cancelWatershed()},cancelWatershed:function(){this.polygon=null,this.creating_watershed=!1,this.watershed_name="",this.fillColor=b},updateEdited:function(t){console.log("MVC=",t);for(var e=[],o=0;o<t.getLength();o++){for(var n=[],a=0;a<t.getAt(o).getLength();a++){var l=t.getAt(o).getAt(a);n.push({lat:l.lat(),lng:l.lng()})}e.push(n)}console.log("paths=",e[0]),this.polygon=e[0]},setPlace:function(t){t&&(console.log(t),this.locateWatershed(t))},locateWatershed:function(t){this.place=t,this.address=t.formatted_address;var e=this.place.geometry.location.lat(),o=this.place.geometry.location.lng(),n=new google.maps.LatLng(e,o);console.log("LL=",n),this.located=!1,this.locating=!0,this.locatedWatershed=null;var a=this;this.watersheds.forEach(function(t){var e=new google.maps.Polygon({paths:t.points});console.log("CHECKING",e),google.maps.geometry.poly.containsLocation(n,e)&&(a.locatedWatershed=t)}),this.locating=!1,this.located=!0}}},k=y,W=Object(s["a"])(k,C,_,!1,null,null,null),L=W.exports,M="#CCCCCC",P={name:"home",components:{Map:L},mounted:function(){var t=this;fetch("/api/maps").then(function(t){return t.json()}).then(function(e){t.maps=e})},data:function(){return{selectedMapId:null,maps:[]}},computed:{selectedMap:function(t){return t.selectedMapId&&t.maps?t.maps.find(function(e){return t.selectedMapId===e.id}):[]}},watch:{},methods:{handleChange:function(t){console.log(this.selectedMapId,this.selectedMap,this.maps,this.maps[this.selectedMapId])},mapClick:function(t){if(this.creating_watershed&&!this.polygon){var e={lat:t.latLng.lat(),lng:t.latLng.lng()};console.log("CLICK MAP=",e);var o=.1;this.polygon=[{lat:e.lat+o,lng:e.lng+o},{lat:e.lat+o,lng:e.lng-o},{lat:e.lat-o,lng:e.lng-o},{lat:e.lat-o,lng:e.lng+o}],console.log(this.polygon)}},saveWatershed:function(){var t=this,e={name:this.watershed_name,points:this.polygon,fillColor:this.fillColor},o=!0,n=this.polygon.reduce(function(t,e){return o?o=!1:t+=":",t+=e.lat+","+e.lng,t},"");fetch("/api/watersheds",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:e.name,bounds:n,color:e.fillColor})}).then(function(t){return t.json()}).then(function(o){o.id&&(e.id=o.id,t.watersheds.push(e)),console.log(this.watersheds)}),this.cancelWatershed()},cancelWatershed:function(){this.polygon=null,this.creating_watershed=!1,this.watershed_name="",this.fillColor=M},updateEdited:function(t){console.log("MVC=",t);for(var e=[],o=0;o<t.getLength();o++){for(var n=[],a=0;a<t.getAt(o).getLength();a++){var l=t.getAt(o).getAt(a);n.push({lat:l.lat(),lng:l.lng()})}e.push(n)}console.log("paths=",e[0]),this.polygon=e[0]},setPlace:function(t){t&&(console.log(t),this.locateWatershed(t))},locateWatershed:function(t){this.place=t,this.address=t.formatted_address;var e=this.place.geometry.location.lat(),o=this.place.geometry.location.lng(),n=new google.maps.LatLng(e,o);console.log("LL=",n),this.located=!1,this.locating=!0,this.locatedWatershed=null;var a=this;this.watersheds.forEach(function(t){var e=new google.maps.Polygon({paths:t.points});console.log("CHECKING",e),google.maps.geometry.poly.containsLocation(n,e)&&(a.locatedWatershed=t)}),this.locating=!1,this.located=!0}}},j=P,x=Object(s["a"])(j,v,w,!1,null,null,null),A=x.exports;n["default"].use(d["a"]);var O=new d["a"]({mode:"history",base:"/",routes:[{path:"/",name:"home",component:A},{path:"/about",name:"about",component:function(){return o.e("about").then(o.bind(null,"f820"))}}]}),S=o("2f62");n["default"].use(S["a"]);var I=new S["a"].Store({state:{},mutations:{},actions:{}}),E=o("9483");Object(E["a"])("".concat("/","service-worker.js"),{ready:function(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered:function(){console.log("Service worker has been registered.")},cached:function(){console.log("Content has been cached for offline use.")},updatefound:function(){console.log("New content is downloading.")},updated:function(){console.log("New content is available; please refresh.")},offline:function(){console.log("No internet connection found. App is running in offline mode.")},error:function(t){console.error("Error during service worker registration:",t)}});var T=o("5f5b"),z=o("ecee"),N=o("ad3d"),F=o("c074"),K=o("f2d1"),G=o("36fc"),J=(o("bbb4"),o("755e"));n["default"].use(T["a"]),z["c"].add(F["a"],K["a"]),n["default"].component("fa-icon",N["a"]),n["default"].component("verte",G["a"]),n["default"].use(J,{load:{key:"AIzaSyBXF7j4I0CI4FPOzI6uZKB6eKjP6Lw1SM8",libraries:"places"}}),n["default"].config.productionTip=!1,window.vueapp=new n["default"]({router:O,store:I,render:function(t){return t(c)}}).$mount("#app")},"5c0b":function(t,e,o){"use strict";var n=o("8fba"),a=o.n(n);a.a},"8fba":function(t,e,o){}});
//# sourceMappingURL=app.4b232b96.js.map